# Generated by Django 2.1.5 on 2020-02-06 13:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bridge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=30, verbose_name='Nome da Bridge')),
                ('codigo', models.CharField(blank=True, max_length=30, verbose_name='Código da Bridge')),
            ],
            options={
                'verbose_name_plural': 'Brigdes',
                'verbose_name': 'Brigde',
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome do Fornecedor')),
                ('cnpj', models.CharField(blank=True, max_length=30, null=True, verbose_name='CNPJ do Fornecedor')),
                ('endereco', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome do Fornecedor')),
                ('site', models.CharField(blank=True, max_length=70, null=True)),
                ('cidade', models.CharField(max_length=50)),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2)),
                ('telefone', models.CharField(blank=True, max_length=30, null=True)),
                ('nome_contato', models.CharField(blank=True, max_length=30, null=True)),
                ('email_contato', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Fornecedores',
                'verbose_name': 'Fornecedor',
            },
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_recurso', models.CharField(choices=[('porta', 'Porta'), ('terminal check-in/out', 'Terminal Check-in/out'), ('sala', 'Sala'), ('bancada', 'Bancada'), ('maquina', 'Maquina'), ('ferramenta manual', 'Ferramenta Manual'), ('ferramenta eletrica', 'Ferramenta Elétrica'), ('ferramenta pneumatica', 'Ferramenta Pneumática'), ('material insumo', 'Material Insumo')], max_length=30)),
                ('nome', models.CharField(help_text='Aqui vai um texto de ajuda mesmo.', max_length=30, verbose_name='Nome do Recurso')),
                ('apelido', models.CharField(blank=True, max_length=30, null=True, verbose_name='O recurso tem algum apelido?')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('fabricante', models.CharField(blank=True, max_length=30, null=True)),
                ('data_aquisicao', models.DateField(blank=True, null=True, verbose_name='Data da aquisição')),
                ('ultima_atualizacao', models.DateField(blank=True, null=True, verbose_name='Última atualização')),
                ('voltagem', models.CharField(blank=True, choices=[('110v', '110'), ('220v', '220')], max_length=10, null=True)),
                ('amperagem', models.IntegerField(blank=True, null=True)),
                ('potencia', models.IntegerField(blank=True, null=True, verbose_name='Potência')),
                ('codigo_meviro', models.IntegerField(blank=True, null=True, verbose_name='Código Referência MeViro')),
                ('requer_treinamento', models.BooleanField(default=False, verbose_name='Requer treinamento para o uso?')),
                ('requer_setup', models.BooleanField(default=False, verbose_name='Requer algum setup inicial para o uso?')),
                ('custo_hora', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Custo de Uso por Hora')),
                ('custo_integral', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Custo de Uso Integral')),
                ('custo_credito', models.IntegerField(blank=True, null=True, verbose_name='Custo de Uso por Crédito')),
                ('hora_max_dia_usuario', models.IntegerField(blank=True, null=True, verbose_name='Número máximo de horas de utilização por dia por usuário')),
                ('hora_max_sem_usuario', models.IntegerField(blank=True, null=True, verbose_name='Número máximo de horas de utilização por semana por usuário')),
                ('api_financeiro', models.CharField(max_length=30)),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('fornecedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infra.Fornecedor')),
            ],
            options={
                'verbose_name_plural': 'Recursos',
                'verbose_name': 'Recurso',
            },
        ),
        migrations.AddField(
            model_name='bridge',
            name='recurso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='infra.Recurso', verbose_name='Com qual recurso se conecta?'),
        ),
    ]
